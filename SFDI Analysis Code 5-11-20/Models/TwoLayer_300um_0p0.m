function [y1] = TwoLayer_0p0(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 26-Nov-2019 01:20:37.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 4xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.00126156519966059;0.00129331065919387;0.102356089305158;0.104544806344175];
x1_step1.gain = [10.1301437308069;10.0836320800188;0.290105608706677;0.293219133934662];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.8405146692183089741;0.44551789525174151363;0.81692619865535909263;0.16580224102174009881;-0.30521922672587137315;0.94251810279142778093;-6.1048371207096172597;0.21937407197718947205;0.14119596616018673108;0.52843987763385946721;-8.8786911534419630243;-6.1971942568174114285;2.7633203776128714146;1.1133245379538232456;3.6222920353631673507;-4.6179086644793416738;2.8337646354657684;-11.769349075083336942;20.007599348179784471;-2.0981641223544977848];
IW1_1 = [-0.23287022603213816674 -1.8738599417287558069 -0.15347350502292059216 0.18854709870648933556;0.029987451245025272678 -0.2951676347968786307 0.30861068854816048335 0.18677822347287015292;-0.12996281064979237074 0.017816654476340353791 1.0089069531540864055 -0.096325973891095012513;-0.012937890764918771186 1.1737477236490194699 -0.12452864449357890775 -0.058199930577863816239;-0.065614609020832381781 0.23408344532617644806 -0.37963506526209517267 -0.24796716792259576589;0.04750528169048885696 -0.03402915233865529826 -0.26576049504743903817 0.72090585500557424758;-0.024118955743233146116 -3.6821525258048368734 -0.15286454124239459706 -2.0221568489660901591;0.048518621376930318179 -0.062950831920304525791 -0.85844053963743560676 0.30394802802716341938;0.017376021814151716705 0.07228519124256441164 -0.15214840914542823724 0.012932634249403753002;0.17553794369232642025 0.13062081727472790726 -0.30589852988795301902 -0.11697278071672916056;-0.077234263183108359252 -0.14248647137564043885 0.20419100664919431765 -6.6355699338856339864;-0.022028517325317669567 -3.3475954386150252873 -0.17202291275456629838 -1.7774138278133300162;0.16353763858094663708 2.5541550113926128063 0.0048388115516367173619 0.064821693736706736955;0.029548039757425117319 -0.046361436328519425865 -0.40418814345366571583 0.62140695119419664394;0.29372762405577468314 0.25639431213211777427 -0.065648470126599953178 1.5786919825758447544;-0.037233273317424833704 -0.12183188180608917062 -0.2423482075446405648 -2.9935253965714023749;0.14117899100317199412 1.9794864430696152979 0.049881866072181681171 0.028068467391802347233;-0.12094961408985427376 -0.83488504029655641325 -0.17171124628948822299 -9.0849530596172272112;0.13428152336246593213 17.740801661374295151 0.081732422484407499241 0.34816702957256334683;-0.61931400273311798532 -0.56756888867527155451 0.1089486761247408092 0.25058831446524371112];

% Layer 2
b2 = 3.1085738656760799614;
LW2_1 = [-0.62044560642436463738 2.9740649999319734853 0.40071794892307238678 -0.1286242988290796363 2.0728829032979381175 2.1316134534540505108 -1.7955022892463354811 -0.36287989231794259837 5.484094961188230144 -1.284453765285482385 2.8742476215343217838 6.9083360043870047917 0.89219105438325185808 -2.6349466707437834145 3.0466591043365545133 -2.9448191800219309933 -4.4331114193168987825 -5.4348089974813253988 -3.547270151258551163 0.48274391512839465168];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2.40554836522931;
y1_step1.xoffset = 0.0448616556823254;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end

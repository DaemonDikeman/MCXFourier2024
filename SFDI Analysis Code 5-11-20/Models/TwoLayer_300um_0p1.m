function [y1] = TwoLayer_0p1(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 26-Nov-2019 01:32:12.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 4xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.00107275912889784;0.00162125100738163;0.102356089305158;0.104544806344175];
x1_step1.gain = [10.0726368494951;10.0959706177562;0.290105608706677;0.293219133934662];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.88276052206510258191;-1.1495816620452270485;2.6221599774230566204;-0.027326371285777941583;0.24721696943503634891;0.063274443253237513951;2.4476850302189063768;1.1489462215034811354;-0.009653919856872994823;5.4397429734256146361;5.5683268094129667602;0.85344512457700205665;-1.2430724564866304505;-0.27702249763456898712;-1.1409964162481502914;4.3094645286376449533;-3.9417338161117352335;-2.0252338330496488794;1.8765634420487431466;-3.4797295615566841143];
IW1_1 = [-0.17251993710309598828 -0.069282546879767065162 -1.1230526335812891503 -0.57186387081277367805;-0.16356423204689066186 -0.47297458099121242325 -0.37550997328778845663 0.18339706508383460393;0.23712095621308670879 0.11775895153472709653 2.1954082225525461958 1.3702899474751717435;0.068688477272127568263 0.076434725888750984502 1.164934914216466888 0.4676984123818063166;-0.22629176916685417309 -0.019122298919323103134 -0.20591135799674928353 -0.20057813565923424126;-0.083191410174559221602 -0.2152686200230808089 -0.53882542203855676721 0.2738298392466936293;0.081156464761428612209 0.13365105830016676958 0.30659690792998878228 2.1756978420547028463;0.1235213572197101789 1.056383363428878619 0.065035395305407292521 0.013933461255621198971;0.034586861990829650959 0.066723090374978574757 0.95566263911298632294 0.34684100478017215741;0.024321201154972518083 0.095446062839554840496 -0.030395752957587569842 4.8830807856420337387;0.027436564038543016092 0.1000976870761110249 -0.023228416953713634102 4.3863673359783383887;-0.2520930109933529617 -0.43187425844222221416 0.062837292002662595292 0.21425380701789736859;-0.10325091690304831482 -0.86188836115963318729 -0.038523136477113459342 -0.13859740361535707875;0.050318644588608726909 -0.24777933735276466698 0.0082625877184280688281 0.33615912512332163375;-0.26464512187863925563 -0.11528107480163529708 0.23560708728973933646 0.11841976297638759363;0.11055896754671006021 0.43372703645834603803 0.44436230353326217068 3.2930331287712051314;-0.10192031098951022383 -0.10896252688613433657 -2.4560484470474950314 0.093633989010564203093;-0.38492236520396205801 -0.14553658387319531875 0.068157502087600407847 -0.51135238708199337587;0.072078980960404201439 0.50435703934499298562 0.012615875896988594865 0.41942247114388175877;-0.17981306078503828116 -0.14988645339400497036 -2.4804559041179041756 0.12621471184054094961];

% Layer 2
b2 = 3.9570118159612448494;
LW2_1 = [0.17055444884587964149 0.99748016129006888963 0.086235934303891148556 -0.79343910929434047219 -0.49842982566114407694 0.27271677159977830707 0.33833841801103098357 1.1719513904896665668 1.4154671492274479849 1.5398970146189692176 -5.4429062888933490427 0.34431674125009736898 2.7525520226298487714 -0.75172011797493565322 1.3650330375356811707 0.52365789477886981462 5.5056520059639835196 -0.81838437720252610319 4.7315887669369853796 -2.1755902586441084878];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2.87252046359032;
y1_step1.xoffset = 0.0242392309010029;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end

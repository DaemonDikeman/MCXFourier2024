function [y1] = TwoLayer_0p15(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 26-Nov-2019 03:31:09.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 4xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.0010519101789356;0.0010177141807037;0.102356089305158;0.104544806344175];
x1_step1.gain = [10.0561992538304;10.2282349513799;0.290105608706677;0.293219133934662];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.0945936688161324035;0.86560982722818569091;0.76257176647071645004;-0.74448909708137855912;-1.3994875504325707816;-0.54241536472312623651;-0.001025176837092156264;1.8699586932352363355;-1.182914265329775283;-1.071300828794362614;0.7160567405078576142;-0.33852897035677925741;-7.6573383661609746298;8.6462862048294883976;-0.26810609631327397828;0.21591081998002240039;1.4913460746373550236;2.4061870224478392188;1.0791178378808150562;-2.4148944362247330986];
IW1_1 = [0.12160424432764865843 0.1923383679149747727 0.14791782488833610243 0.87131996049072690802;0.05615019269492604187 0.61559860483372985662 -0.0085038538689565408568 0.18930230022452951277;0.10031775416618013419 0.90192204717426383009 0.022078823940752244359 0.036021182940755638868;0.1170154646284757155 0.022853847761626890078 -0.38373782901006503465 -0.12765929545091045383;-0.25340709407076350557 -0.16026904902942507025 -1.1665875335060054141 0.29556148720427066756;0.17373579877810887973 0.029719809134209854845 0.50644177083469821277 0.044670603879829219596;-0.013359381996370104512 0.034589753353299987348 0.20040775437436811335 -0.41573054789735175429;0.10938903132418587028 -0.42334484027222862856 1.5344643404953257626 -1.4672409747397894275;0.085725017773704476065 -0.00065053943636571493793 -0.30202102764458194084 -0.79360057966423891429;0.064588831972998292374 -0.038471448390201432033 -0.30189799989790899737 -0.8986245818784301953;-0.041345960818538932124 -0.0053866331872277099443 0.80048043687787473477 0.11565026897962575603;-0.21635260264995587187 -0.096541656191372379747 -0.96510121913181945441 0.2905918876614791424;-0.12588672093372160754 -0.13654927077810846692 -5.9085692678530330468 0.30049128629137411561;0.068885693544442308522 0.15850621852631838204 0.02744517158805764856 6.6203616554148476681;0.058628693191997184597 0.0031637585185144280302 0.44880441598472847753 -0.37169608863183667413;0.011771789292885187841 0.0094332255344176923345 -0.44613665897522519765 -0.040964821725730390933;0.19196818150432282124 0.055755876669770422505 1.1507553899903268935 0.59348849000543035803;0.64364199874387983957 0.40047315621750140258 -0.17964048361526852027 -0.41174069290436282609;0.0099272262293453004955 0.45462797480149030882 -0.068987402867985228583 0.3559937686386128175;0.25410557070765765753 2.0742865869924327349 0.22702091400785659459 -0.50803429346128980981];

% Layer 2
b2 = 1.7721071695826389192;
LW2_1 = [3.0041773961268578574 -2.0105289267275430198 0.42719794290874035791 2.9550488216472197145 0.52832878022063156642 -0.65720245640063001957 1.0322902156816307073 -0.0086921812563799799589 -2.2661513497524170546 1.6879637090161287993 1.5526300127360701531 0.35915032068279240107 0.83387262139571838304 -3.0877172088733813027 -1.1960174287817799677 -2.7367919316380606709 0.27108089802434276461 -0.31397783794784350775 1.7573260733891358232 -0.013068257344107481882];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2.98387786079992;
y1_step1.xoffset = 0.018664114177227;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
